name: Validate Access

# Checks if the workflow is triggered by an admin user
# using the github.actor variable against the CODEOWNERS file
# and the contacts.yaml file under oci/* path

on:
  workflow_call:
    inputs:
      admin-only:
        description: 'The barriered workflow should only be triggered as admin'
        required: true
        default: false
        type: boolean
      image-path:
        description: 'The path to the image to be built'
        required: true
        type: string

jobs:
  validate-access:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check if the workflow is triggered by an admin user
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking if the workflow is triggered by an admin user"
          echo "github.actor: ${{ github.actor }}"
          echo "admin-only: ${{ inputs.admin-only }}"
          echo "CODEOWNERS: $(cat  ${{ github.workspace }}/CODEOWNERS)"
          echo "contacts.yaml: $(cat ${{ github.workspace }}/${{ inputs.image-path }}/contacts.yaml)"
          if [[ ${{ inputs.admin-only }} == true ]]; then
            echo "Expanding team mentions in the CODEOWNERS file"
            teams=$(grep -oE '@[[:alnum:]_.-]+\/[[:alnum:]_.-]+' ${{ github.workspace }}/CODEOWNERS | sort | uniq)

            for team in $teams; do
              org=$(echo $team | cut -d'/' -f1 | sed 's/@//')
              team_name=$(echo $team | cut -d'/' -f2)
              members=$(gh api "/orgs/$org/teams/$team_name/members" | jq -r '.[].login')
              replacement=$(echo "$members" | xargs -I {} echo -n "@{} " | awk '{$1=$1};1')
              sed -i "s|$team|$replacement|g" $CODEOWNERS_FILE
            done

            if grep -w "@${{ github.actor }}" ${{ github.workspace }}/CODEOWNERS || cat ${{ github.workspace }}/${{ inputs.image-path }}/contacts.yaml | yq ".maintainers" | grep -w "${{ github.actor }}"; then
              echo "The workflow is triggered by an admin user"
            else
              echo "The workflow is not triggered by an admin user"
              exit 1
            fi
          else
            echo "The workflow is not restricted to admin users"
          fi
